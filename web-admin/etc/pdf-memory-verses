#!/usr/bin/env node
const Fs    = require('fs');
const Yargs = require('yargs');

const Usage           = require('../lib/usage');
const { MemoryCards } = require('../lib/pdf');


const yargs = Yargs
  .usage( 'Generate memory verses PDF' )
  .options({
    f: {
      alias   : 'file',
      describe: 'Pull version and verse information from the given file',
      demandOption: true,
    },
    b: {
      alias   : 'base',
      describe: 'The base font size',
      number  : true,
      default : 9,
    },
    c: {
      alias   : 'cache',
      describe: 'Fetch data from the local cache',
      type    : 'boolean',
      default : false,
    },
  })
  .help();

main().catch(err => { console.error('*** main:', err) });

/****************************************************************************
 * async main
 *
 */
async function main() {
  const args  = yargs.parse();

  //console.log('main() args:', args);
  if (typeof(args.file) !== 'string' || args.file.length < 3) {
    Usage.yargs( yargs );
  }

  const baseFont      = args.base;      //9;
  const fromCache     = args.cache;     // false;

  /* Read and process the provided memory verse file in the form:
   *    Version       | %version-name%
   *    %ref1%        | %memory-key%
   *    ...
   */
  const content       = Fs.readFileSync( args.file, 'utf-8' );
  const lines         = content.split('\n');
  const verses        = lines.map( line => {
                          const [ref, key]  = line.split( /\s*\|\s*/ );
                          return {ref, key}
                        }).filter( data => data.ref );
  const versionId     = verses.shift();
  if (versionId.ref !== 'Version') {
    console.error('*** Missing "Version | %name%" as the first line');
    return;
  }

  const versionName   = versionId.key;
  const outFile       = `memory-cards-${versionName}.pdf`;

  console.log('=== Generate PDF for %d %s memory cards ...',
              verses.length, versionName);

  const cards = new MemoryCards( versionName );
  const pdf   = await cards.generate( verses, baseFont, fromCache );

  console.log('=== Output to %s ...', outFile);
  pdf.write( outFile );
}
